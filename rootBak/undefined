
************ shared=yes ************

$_CreateApp_httpServer
 ==== args={"0":[{"appVar":"app","core":{"global":2,"globalVar":2,"varName":"core"},"databases":{"OPTIONS":{"z":"","createGlobalVar":2,"globalVarName":0,"globalVarPrefix":"db_","createVar":2,"varName":0,"varPrefix":"db_","registerValue":2,"valueName":0,"valuePrefix":"db:"},"settings":{"name":"settings","host":"localhost","port":1002,"schemas":{"base":{"NAME":"settings:base"}}},"userData":{"name":"userData","host":"localhost","port":1002,"schemas":{"users":{"NAME":"userData:users"}}}},"modules":{"options":{"appRootVar":2,"global":0,"globalVar":0,"rootVar":2},"App":"app","router":"router"},"libs":{},"logging":{"options":{},"logs":{"main":{"console":2,"file":0,"db":0}},"main":"main","messages":{"first":"First app log.","outline":{"done":"","init":""},"app":{"done":"","exit":"","exiting":"","exitRequest":"","init":""}}},"vars":{},"values":{},"type":"httpServer"},{"meta":{"title":"My App","version":"0.2","description":"This is my app."},"name":"myApp","type":"httpServer","fileSystems":{},"server":{"port":8088,"router":{"items":[{"mode":"get","path":"/","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /'); Next();\r\n                     }","MEMBERS":{}}},{"mode":"get","path":"/","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /  -  YES');\r\n                        res.writeHead(200, {\"Content-Type\": \"text/plain\"});\r\n                        res.end(\"root\\n\");\r\n                     }","MEMBERS":{}}},{"mode":"get","path":"/about","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /about');\r\n                        res.writeHead(200, {\"Content-Type\": \"text/plain\"});\r\n                        res.end(\"about\\n\");\r\n                     }","MEMBERS":{}}},{"mode":"get","regex":"/pam$","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /PAM +++++++++++++++++++++++++');\r\n                        res.writeHead(200, {\"Content-Type\": \"text/plain\"});\r\n                        res.end(\"/PAM +++++++++++++++++++++++++\");\r\n                     }","MEMBERS":{}}}]}},"pow":{"TYPE":"Function","CODE":"function (){/*eval(\"cout('#### app.name='+app.name);\")*/}","MEMBERS":{}}}],"2":{"modules":{},"vars":{},"logging":{"logs":{"main":{"console":2,"file":0,"db":0}}},"core":{"ExtImp":{"TYPE":"Function","CODE":"function (obj, val) { return ExIm.Bind(obj)(val, {extimp: 2}); }","MEMBERS":{}},"SB":{"TYPE":"Function","CODE":"function (code,vars) {\r\n      var __$X_=exports; \r\n   }","MEMBERS":{"State":{"TYPE":"Function","CODE":"function (__$vars_, __$noGlobal_) {\r\n      var __$rv_, __$z_, __$z2_, __$k_, __$k2_ \r\n         ,  __$vars_=__$vars_||{}\r\n         ,  __$v_=Array.From(__$vars_)//(__$vars_ instanceof Array || __$vars_.$type=='array')?__$vars_ : [__$vars_]\r\n         ,  __$G_=global\r\n         ,  __$X_=exports\r\n      \r\n         ,  exports=undefined, __$vars_=undefined\r\n      ;\r\n\r\n      if(__$noGlobal_) {\r\n         for(__$k_ in global) eval('var '+__$k_+'=undefined;');\r\n         var global=undefined;\r\n      };\r\n      //onsole.log('__$VarString_='+__$VarString_(__$v_, '__$v_'));\r\n      eval(__$VarString_(__$v_, '__$v_'));\r\n\r\n      __$rv_=function(__$code_, __$noMod_) { __$rv_.Eval(__$code_, __$noMod_); };\r\n      eval(__$functions_);\r\n   \r\n      return __$rv_;\r\n   }","MEMBERS":{}}}},"$cr":"\n","_t":true,"_f":false,"Blank":{"TYPE":"Function","CODE":"function (){return function(){}}","MEMBERS":{}},"Cls":{"TYPE":"Function","CODE":"function (){cout('\\033[2J');}","MEMBERS":{}},"def":{"TYPE":"Function","CODE":"function (v){return typeof v!='undefined'?_t:_f;}","MEMBERS":{}},"sout":{"TYPE":"Function","CODE":"function (s){\r\n            s=(typeof s=='string')?s:(s.toString)?s.toString():s;\r\n            process.stdout.write(s);\r\n         }","MEMBERS":{}},"typeOf":{"TYPE":"Function","CODE":"function (v){return v==null?v:v&&v.$type?v.$type:typeof v}","MEMBERS":{}},"TypeOf":{"TYPE":"Function","CODE":"function (v){\r\n            return v==null?null:v&&v.$type?\r\n               v.$type=='class'&&v.$name&&v.$name!=''?v.$name:v.$type:typeof v;\r\n         }","MEMBERS":{}},"$Str":{"TYPE":"Function","CODE":"function (v,recursive,spacing,times,rMax,tim){\r\n            var r=recursive,z=spacing,sp=z?z:0\r\n               ,  T=typeOf(v),rv='',z=times,x=def(z)?z:3\r\n               ,  r=rMax,rm=def(r)?r:1,tm=def(tim)?tim:0,r=(recursive&&tm<rm)?2:0\r\n            ;\r\n            if(v){\r\n               rv+=' '.Repeat(sp*x);\r\n               z=v.$$type;\r\n               if(T=='string'||T=='number'||T=='boolean')rv+=T+': '+v+'\\n';\r\n               else if(T=='function'||T=='class'||z=='type'||z=='struct'){\r\n                  rv+=T+':\\n';if(r)rv+=$Str.Fun(v,r,sp+1,x);\r\n               }\r\n               else{rv+=T+'::\\n';if(r)rv+=$Str.Obj(v,r,sp+1,x);}\r\n            }            \r\n            return rv;\r\n         }","MEMBERS":{"Fun":{"TYPE":"Function","CODE":"function (v,recursive,spacing,times,rMax,tim){\r\n                  var z,prm=0,k,m,zz,s,l,sp=spacing,T=typeOf(v),rv='',x=times\r\n                     ,  rm=rMax,tm=tim,r=recursive\r\n                  ;\r\n                  z='';zz=v.toString().split('\\n');k=' '.Repeat((sp+1)*x);\r\n                  for(l=0,s=zz.length;l<s;l++)z+=k+zz[l]+'\\n';\r\n                  rv+=' '.Repeat(sp*x)+'code:\\n'+z+'\\n';\r\n                  rv+=' '.Repeat(sp*x)+'members:\\n';\r\n                  for(m in v){\r\n                     z=v[m];k=typeOf(z);\r\n                     if(z&&(!z.$$prim||prm)){\r\n                        rv+=' '.Repeat((sp+1)*x)+m+':\\n';\r\n                        rv+=r?$Str(z,r,sp+2,x,rm,tm+1):' '.Repeat((sp+2)*x)+k+':\\n';\r\n                     }\r\n                  }\r\n               \r\n                  return rv;                  \r\n               }","MEMBERS":{}},"Obj":{"TYPE":"Function","CODE":"function (v,recursive,spacing,times,rMax,tim){\r\n                  var z,k,m,zz,s,l,sp=spacing,T=typeOf(v),rv='',x=times\r\n                     ,  rm=rMax,tm=tim,r=recursive\r\n                  ;\r\n                  rv+=' '.Repeat(sp*x)+'members:\\n';\r\n                  for(m in v){\r\n                     z=v[m];k=typeOf(z);\r\n                     rv+=' '.Repeat((sp+1)*x)+m+':\\n';\r\n                     rv+=r?$Str(z,r,sp+2,x,rm,tm+1):' '.Repeat((sp+2)*x)+k+':\\n';\r\n                  }\r\n               \r\n                  return rv;                  \r\n               }","MEMBERS":{}}}},"Obj":{"TYPE":"Function","CODE":"function (v){\r\n            var rv={},n,z,hs=['$$ob','Obj','$type','$$type'];\r\n            for(n in v){\r\n               z=v[n];\r\n               if(!z.$$prim&&!hs.Has(n,2))rv[n]=z;\r\n            }\r\n            return rv;\r\n         }","MEMBERS":{}},"_$":{"TYPE":"Function","CODE":"function (v,vv){\r\n            var vs=_.$$vals,z,zz,o,k,rv=undefined,a=arguments,al=a.length;\r\n            \r\n            switch(al){\r\n               case 1:\r\n                  k=typeof v;\r\n                  if(k=='string'||k=='number'||k=='boolean')\r\n                     for(z in vs)if(z==v)rv=vs[z];\r\n                  else for(z in v)vs[z]=v[z];\r\n               break;\r\n               case 2:\r\n                  vs[v]=vv;\r\n               break;\r\n               default:\r\n                  \r\n            };\r\n            return rv;\r\n         }","MEMBERS":{"$$vals":{},"Reg":{"TYPE":"Function","CODE":"function (nam,v){\r\n                  var n=nam,v=v?v:{},j=v.$$type,k=v.$type,l=v.$name;\r\n                  n=(n&&n!='')?n:(j=='type')?k:(k=='class'||k=='struct')?l:'!!';\r\n                  _.$$vals[n]=v;\r\n                  return v\r\n               }","MEMBERS":{}}}},"_":{"TYPE":"Function","CODE":"function (v,vv){\r\n            var vs=_.$$vals,z,zz,o,k,rv=undefined,a=arguments,al=a.length;\r\n            \r\n            switch(al){\r\n               case 1:\r\n                  k=typeof v;\r\n                  if(k=='string'||k=='number'||k=='boolean')\r\n                     for(z in vs)if(z==v)rv=vs[z];\r\n                  else for(z in v)vs[z]=v[z];\r\n               break;\r\n               case 2:\r\n                  vs[v]=vv;\r\n               break;\r\n               default:\r\n                  \r\n            };\r\n            return rv;\r\n         }","MEMBERS":{"$$vals":{},"Reg":{"TYPE":"Function","CODE":"function (nam,v){\r\n                  var n=nam,v=v?v:{},j=v.$$type,k=v.$type,l=v.$name;\r\n                  n=(n&&n!='')?n:(j=='type')?k:(k=='class'||k=='struct')?l:'!!';\r\n                  _.$$vals[n]=v;\r\n                  return v\r\n               }","MEMBERS":{}}}},"NEW":{"TYPE":"Function","CODE":"function (cls, args) {\r\n            eval('var rv=new cls('+pc.ArgStr(arguments)+');');\r\n            return rv;\r\n         }","MEMBERS":{}},"Type":{"TYPE":"Function","CODE":"function (nam,ob,$$t){\r\n            //var ob=obj?obj:{},rv=(retain)?ob:{},op=ob.prototype,p=rv.prototype,z=proto?op:ob;\r\n            var o=ob?ob:{},op=o.prototype,p,z=o.$Init,i=z?z:Blank,T=$$t?$$t.LCase():'type';\r\n            return function(){\r\n               i.apply(this,arguments);\r\n               return this;\r\n            }.Extend(ob).Implement(ob.prototype).ExtImp({$type:nam.LCase(),$$type:T,$$ob:ob});\r\n         }","MEMBERS":{}},"Struct":{"TYPE":"Function","CODE":"function (nam,v){\r\n            return Type(nam,Blank().Implement(v),'struct').Implement({\r\n               Obj:function(){return Obj(this)}\r\n            });\r\n         }","MEMBERS":{}},"Hidden":{"TYPE":"Function","CODE":"function (v){v.$hidden=2;return v;}","MEMBERS":{}},"Prim":{"TYPE":"Function","CODE":"function (v){v.$$prim=2;return v;}","MEMBERS":{}},"Private":{"TYPE":"Function","CODE":"function (v){v.$private=2;return v;}","MEMBERS":{}},"PrivShare":{"TYPE":"Function","CODE":"function (v){v.$private=v.$shared=2;return v;}","MEMBERS":{}},"Protected":{"TYPE":"Function","CODE":"function (v){v.$protected=2;return v;}","MEMBERS":{}},"Shared":{"TYPE":"Function","CODE":"function (v){v.$shared=2;return v;}","MEMBERS":{}},"SS":{"TYPE":"Function","CODE":"function (v){//-SmallScript\r\n   var rv='',l,b=false,i,s,q,d,z=O.SS.BreakDown(v),ln=z.length;\r\n   for(l=0;l<ln;l++){\r\n      i=z[l];q=i.qt;\r\n      rv+=q?q+i.v+q:O.SS.Slim(i.v);\r\n      b=!b\r\n   };\r\n   return rv;\r\n}","MEMBERS":{"BreakDown":{"TYPE":"Function","CODE":"function (v,pos,qt){\r\n         var r,z='',c,n,rV=new Array(),p=pos?pos:0,ln=v.length;\r\n         while(p<ln){\r\n            c=v[p];p++;\r\n            if((c=='\"'||c==\"'\")&&(!qt||c==qt)){\r\n               if(z!='')rV.push({v:z,qt:qt});n=!qt?c:O.udef;\r\n               return rV.concat(O.SS.BreakDown(v,p,n));\r\n            }\r\n            z+=c;\r\n         };\r\n         if(z!='')rV.push({v:z,qt:qt});\r\n         return rV\r\n      }","MEMBERS":{}},"Slim":{"TYPE":"Function","CODE":"function (v){\r\n         return v.ReplaceAll([\r\n               ['%',';var ']\r\n            ,  ['@f',' function']\r\n            ,  ['@r',';return ']\r\n            ,  ['@>',';cout']\r\n         ])\r\n      }","MEMBERS":{}}}},"$$Is":{"TYPE":"Function","CODE":"function (v,typ){\r\n      if(!typ&&this.typ)typ=this.typ;\r\n      return v&&v.$type?v.$type==typ?true:false:typeof v==typ?true:false;\r\n   }","MEMBERS":{}},"IsArr":{"TYPE":"Function","CODE":"function () {\r\n\t\t\t\t\t\treturn t.apply(that, arguments);\r\n\t         \t}","MEMBERS":{"$$bound":2,"$$FN":{"TYPE":"Function","CODE":"function (v,typ){\r\n      if(!typ&&this.typ)typ=this.typ;\r\n      return v&&v.$type?v.$type==typ?true:false:typeof v==typ?true:false;\r\n   }","MEMBERS":{}}}},"IsCls":{"TYPE":"Function","CODE":"function () {\r\n\t\t\t\t\t\treturn t.apply(that, arguments);\r\n\t         \t}","MEMBERS":{"$$bound":2,"$$FN":{"TYPE":"Function","CODE":"function (v,typ){\r\n      if(!typ&&this.typ)typ=this.typ;\r\n      return v&&v.$type?v.$type==typ?true:false:typeof v==typ?true:false;\r\n   }","MEMBERS":{}}}},"IsFun":{"TYPE":"Function","CODE":"function () {\r\n\t\t\t\t\t\treturn t.apply(that, arguments);\r\n\t         \t}","MEMBERS":{"$$bound":2,"$$FN":{"TYPE":"Function","CODE":"function (v,typ){\r\n      if(!typ&&this.typ)typ=this.typ;\r\n      return v&&v.$type?v.$type==typ?true:false:typeof v==typ?true:false;\r\n   }","MEMBERS":{}}}},"IsNum":{"TYPE":"Function","CODE":"function () {\r\n\t\t\t\t\t\treturn t.apply(that, arguments);\r\n\t         \t}","MEMBERS":{"$$bound":2,"$$FN":{"TYPE":"Function","CODE":"function (v,typ){\r\n      if(!typ&&this.typ)typ=this.typ;\r\n      return v&&v.$type?v.$type==typ?true:false:typeof v==typ?true:false;\r\n   }","MEMBERS":{}}}},"IsObj":{"TYPE":"Function","CODE":"function () {\r\n\t\t\t\t\t\treturn t.apply(that, arguments);\r\n\t         \t}","MEMBERS":{"$$bound":2,"$$FN":{"TYPE":"Function","CODE":"function (v,typ){\r\n      if(!typ&&this.typ)typ=this.typ;\r\n      return v&&v.$type?v.$type==typ?true:false:typeof v==typ?true:false;\r\n   }","MEMBERS":{}}}},"IsOl":{"TYPE":"Function","CODE":"function () {\r\n\t\t\t\t\t\treturn t.apply(that, arguments);\r\n\t         \t}","MEMBERS":{"$$bound":2,"$$FN":{"TYPE":"Function","CODE":"function (v,typ){\r\n      if(!typ&&this.typ)typ=this.typ;\r\n      return v&&v.$type?v.$type==typ?true:false:typeof v==typ?true:false;\r\n   }","MEMBERS":{}}}},"IsProp":{"TYPE":"Function","CODE":"function () {\r\n\t\t\t\t\t\treturn t.apply(that, arguments);\r\n\t         \t}","MEMBERS":{"$$bound":2,"$$FN":{"TYPE":"Function","CODE":"function (v,typ){\r\n      if(!typ&&this.typ)typ=this.typ;\r\n      return v&&v.$type?v.$type==typ?true:false:typeof v==typ?true:false;\r\n   }","MEMBERS":{}}}},"IsStr":{"TYPE":"Function","CODE":"function () {\r\n\t\t\t\t\t\treturn t.apply(that, arguments);\r\n\t         \t}","MEMBERS":{"$$bound":2,"$$FN":{"TYPE":"Function","CODE":"function (v,typ){\r\n      if(!typ&&this.typ)typ=this.typ;\r\n      return v&&v.$type?v.$type==typ?true:false:typeof v==typ?true:false;\r\n   }","MEMBERS":{}}}},"IsFUN":{"TYPE":"Function","CODE":"function (v){var z=typeof v;return z=='function'||z=='overload'?true:false;}","MEMBERS":{}},"IsOBJ":{"TYPE":"Function","CODE":"function (v){var z=typeof v;return z=='function'||z=='object'?true:false;}","MEMBERS":{}},"Clone":{"TYPE":"Function","CODE":"function (v){\r\n   var typ=typeof v;\r\n   if(typ=='array')v=Array.Clone(v);\r\n   else if(typ=='object')v=Object.Clone(v);\r\n   return v\r\n}","MEMBERS":{}},"$ArgsStr":{"TYPE":"Function","CODE":"function (args, nam, startComma){\r\n   var a=args, rv=((a)&&a.length&&startComma)? ',' : '', n=nam?nam:'arguments';\r\n   if(a) for(lp=0;lp<a.length;lp++) rv+=n+'['+lp+']'+(lp!=a.length-1?',':'');\r\n   return rv;\r\n}","MEMBERS":{}},"ArgStr":{"TYPE":"Function","CODE":"function (args, nam, startComma){\r\n   var a=args, rv=((a)&&a.length&&startComma)? ',' : '', n=nam?nam:'arguments';\r\n   if(a) for(lp=0;lp<a.length;lp++) rv+=n+'['+lp+']'+(lp!=a.length-1?',':'');\r\n   return rv;\r\n}","MEMBERS":{}},"$VarStr":{"TYPE":"Function","CODE":"function (ob, nam){\r\n   var rv='', n;\r\n   for(n in ob){\r\n      //if(rv=='')rv='var ';else rv+=',';\r\n      //rv+=n+'='+nam+'.'+n;\r\n      rv+=((rv=='')?'var ':',')+n+'='+nam+'.'+n;\r\n   }\r\n   return rv+';';\r\n}","MEMBERS":{}},"VarStr":{"TYPE":"Function","CODE":"function (ob, nam){\r\n   var rv='', n;\r\n   for(n in ob){\r\n      //if(rv=='')rv='var ';else rv+=',';\r\n      //rv+=n+'='+nam+'.'+n;\r\n      rv+=((rv=='')?'var ':',')+n+'='+nam+'.'+n;\r\n   }\r\n   return rv+';';\r\n}","MEMBERS":{}},"Global":{"TYPE":"Function","CODE":"function (ob){\r\n   var o=Array.From(ob), l=o.length, i;\r\n   for(i=0; i<l; i++) Object.CopyTo(global,o[i]);\r\n}","MEMBERS":{"Pops":{"TYPE":"Function","CODE":"function (doIt){if(!G.$$_P_||doIt){O.Global(O);G.$$_P_=2}; return O;}","MEMBERS":{}}}},"IID":{"TYPE":"Function","CODE":"function (){return G.$$iid++;}","MEMBERS":{}},"$$modes":{},"Choose":{"TYPE":"Function","CODE":"function (nam,val){\r\n      var rv,z,zz,n,ln,go=2;\r\n      if(typeof nam=='string'&&val){\r\n         z=nam.LCase();\r\n         for(mb in val){\r\n            if(mb!='Else'&&go){\r\n               zz=mb.split('_or_');\r\n               ln=zz.length;\r\n               for(lp=0;lp<ln;lp++){\r\n                  n=zz[lp].LCase();\r\n                  if(n!='$run'&&(n==z||n=='$else')){\r\n                     rv=val[mb];go=0;\r\n                  };\r\n               };\r\n            };\r\n         };\r\n      };\r\n      if((val&&go)&&val.Else)rv=val.Else;\r\n      if((typeof rv=='function')&&(val.$run||rv.$run))rv=rv();\r\n      return rv;\r\n   }","MEMBERS":{}},"IsMode":{"TYPE":"Function","CODE":"function (nam){\r\n      nam=nam?IsArr(nam)?nam:[nam]:['main'],ln=nam.length;\r\n      if(!nam.length)return false;\r\n      for(lp=0;lp<ln;lp++)if(!$$modes[nam[lp].LCase()])return false;\r\n      return true\r\n   }","MEMBERS":{}},"Mode":{"TYPE":"Function","CODE":"function (nam){\r\n      var n=def(nam)?nam.LCase():'main',z=$$modes[n],v=$$modes[n]=z?z:null;\r\n      return new function(n,v) {\r\n         var name=n,val=v;\r\n         this.Get=function(){return val;};\r\n         this.Set=function(str){$$modes[name]=val=str;}\r\n      }(n,v);\r\n   }","MEMBERS":{}},"Modes":{"TYPE":"Function","CODE":"function (obj){\r\n      if(IsOBJ(obj))for(mb in obj)$$modes[mb.LCase()]=obj[mb].LCase()\r\n   }","MEMBERS":{}},"Modal":{"TYPE":"Function","CODE":"function (nam,val){\r\n      if(!IsStr(nam)){val=nam;nam='main'};\r\n      return nam&&val?o.Choose($$modes[nam.LCase()],val):udef\r\n   }","MEMBERS":{}},"Overload":{"TYPE":"Function","CODE":"function (val){\r\n   var t=this,v=val?val:{},mb,rv=O.Overload.$Base();\r\n   for(mb in v)rv.fns[mb]=v[mb];\r\n   return rv;\r\n}","MEMBERS":{"$Base":{"TYPE":"Function","CODE":"function (){\r\n         var ff={},rv=function(){\r\n            var t=this,fn=t.fns,A=arguments,z,oS,rv,aS=o.Overload.ArgSig(A),mmb;\r\n            for(mmb in fn){\r\n               if(!rv){\r\n                  oS=o.Overload.ObjSig(mmb);\r\n                  if(o.Overload.MatchSigs(aS,oS))\r\n                     eval('rv=fn.'+mmb+'('+o.$ArgsStr(A,'A')+');');\r\n               };\r\n            };\r\n            return rv\r\n         }.Bind({$type:'overload',fns:ff});\r\n         rv.Extend({\r\n               //Bind:function(v){var t=this,f=t.fns;mb;for(mb in f)f[mb]=f[mb].Bind(v);return t;}\r\n               $$bound: 0\r\n            ,  $type: 'overload'\r\n            ,  $isOverLoad: 2\r\n            ,  Bind: function(v){\r\n                  var t=this,f=t.fns,rv=O.Overload.$Base(),mb;\r\n                  for(mb in f)rv.fns[mb]=f[mb].Bind(v);\r\n                  rv.$$bound=2;\r\n                  return rv\r\n               }\r\n            ,  fns: ff\r\n         });\r\n         return rv;\r\n      }","MEMBERS":{}},"ArgSig":{"TYPE":"Function","CODE":"function (args){\r\n         var rv=[],a,z,ln=args.length;\r\n         for(lp=0;lp<ln;lp++){\r\n            a=args[lp];z=o.typeOf(a);\r\n            rv.push((z=='class'&&((a.$name)&&a.$name.length))?[z,a.$name.LCase()]:[z]);\r\n         };\r\n         return rv\r\n      }","MEMBERS":{}},"ObjSig":{"TYPE":"Function","CODE":"function (str){\r\n         var rv=[],k,z,zz,nez2,a=str.split('_or_'),ln=a.length,lp,lp2,ln2;\r\n         \r\n         for(lp=0;lp<ln;lp++){\r\n            ne=[];\r\n            z=a[lp].split('_');\r\n            ln2=z.length;\r\n            for(lp2=0;lp2<ln2;lp2++){\r\n               z2=z[lp2];\r\n               zz=(z2=='$')?['?']:z2.split('$');\r\n               k=zz[0];\r\n               if(k=='a'||k=='array')k='array';\r\n               else if(k=='c'||k=='class')k='class';\r\n               else if(k=='C'||k=='CLASS')k='CLASS';\r\n               else if(k=='f'||k=='function')k='function';\r\n               else if(k=='n'||k=='number')k='number';\r\n               else if(k=='o'||k=='object')k='object';\r\n               else if(k=='s'||k=='string')k='string';\r\n               else if(k=='S'||k=='STRING')k='STRING';\r\n               else if(k=='any'){}\r\n               else k='$other';\r\n               zz[0]=k;\r\n\r\n               ne.push(zz);\r\n            };\r\n            rv.push(ne);\r\n         };\r\n         return rv\r\n      }","MEMBERS":{}},"MatchSigs":{"TYPE":"Function","CODE":"function (aSig,oSig){\r\n         var as=aSig,os=oSig,ln=os.length\r\n            ,  z,zz,z1,z2,gd,a,o,aa,oo,lp,l2,ol\r\n            ,  a2l,o2l\r\n         ;\r\n         \r\n         for(lp=0;lp<ln;lp++){\r\n            o=os[lp];gd=2;ol=o.length;\r\n            if(as.length!=ol)gd=0;\r\n            if(gd)\r\n               for(l2=0;l2<ol;l2++){\r\n                  a2=as[l2];o2=o[l2];\r\n                  a2l=a2.length;o2l=o2.length;\r\n                  if((a2&&o2)&&a2l&&o2l){\r\n                     aa=a2[0];oo=o2[0];\r\n                     \r\n                     //if(aa!=oo)gd=0;\r\n                     \r\n                     if(oo=='string'||oo=='number'){\r\n                        if(a2.length!=o2.length)gd=0;\r\n                        else if(a2.length>1)\r\n                           if(a2[1]!=o2[1])gd=0;\r\n                     }\r\n                     else if(gd&&aa=='class'){\r\n                        if(a2.length!=o2.length)gd=0;\r\n                        if(a2.length>1)\r\n                           if(a2[1]!=o2[1])gd=0;\r\n                     };\r\n                  }\r\n                  else gd=0;\r\n               };\r\n            if(gd)return true;\r\n         };\r\n         return false;\r\n      }","MEMBERS":{}}}},"Property":{"TYPE":"Function","CODE":"function (val){\r\n   return O.Blank().Extend({ $isProp: 2, $$v: val });\r\n}","MEMBERS":{"$Init":{"TYPE":"Function","CODE":"function (v,vNam,cr){\r\n         cr=cr||'';\r\n         return(''\r\n            +  \"var $n$=\"+vNam+\"||{}\"\r\n            +     \",    $p$=$n$.Private=$n$.Private||{}\"\r\n            +     \",    $v$=$p$.$val=(typeof $p$.$val!='undefined')?\" \r\n            +              \"     $p$.$val\"\r\n            +              \":    (typeof $n$.$val!='undefined')? $n$.$val : $n$.val\"\r\n            +     \",    $g$=$n$.Get=$n$.Get || function() { return $val; }\"\r\n            +     \",    $s$=$n$.Set=($n$.Set && $n$.Set!='auto')?\"\r\n            +              \"     $n$.Set\"\r\n            +              \":    function(vl) { $val=vl; return $val; }\"\r\n            +  \";\"\r\n            +  \"eval($_P_.$VarStr($p$, '$p$'));\"\r\n            +  vNam+\"=$n$\"\r\n         );\r\n      }","MEMBERS":{}},"$Base":{"TYPE":"Function","CODE":"function (v,vNam,nam,prntNam){\r\n         return(''\r\n            +  'Object.defineProperty('+prntNam+',\"'+nam+'\",{'\r\n            +     '   get:_Get'\r\n            +     ',  '+(v.readonly?'':'writable:true, set:_Set')\r\n            +  '});'\r\n         );\r\n      }","MEMBERS":{}},"$GetSet":{"TYPE":"Function","CODE":"function (v, vNam){\r\n         var z='var _Get=',f; \r\n         \r\n         f=v.Get;\r\n         z+=((f.$$bound)? (vNam+'.Get') : f.Str());\r\n                  \r\n         if(v.Set&&!v.readonly){\r\n            z+=';var _Set=';\r\n            f=v.Set;\r\n            if(f.$$bound)z+=vNam+'.Set';\r\n            else z+=f.toString();\r\n         };\r\n         //else z+='function(){}';\r\n         return z+';';\r\n      }","MEMBERS":{}}}},"Class":{"TYPE":"Function","CODE":"function (nam,specs,onReady){\r\n   if(typeof nam!='string') { onReady=specs; specs=nam; nam=0; }\r\n   else onReady=specs;\r\n   if(2) {//-vars\r\n\t   var z=2, z1, z2, z4, zz,mm, nm,pp,i, l,l2,r,sh,rv,$ini, k, stt, kk,pr,ze,zr,ln,vs, spc={}\r\n\t      ,\tExtFn, rvs, $mmb\r\n\t      ,  is={}, dd\r\n\t      ,  o=specs||{}\r\n\t      ,  $if=Array.From(o.Interface)\r\n\t      ,  $e=Array.From(o.Extends)\r\n\t      ,  $i=Array.From(o.Implements)\r\n\t      ,  $pi=Array.From(o.PreImp)\r\n\t      ,  $p=o.Private\r\n\t      ,  $s=o.Shared\r\n\t      ,  nm=nam||(o.$name||'')\r\n\t      ,  $o=o.options\r\n\t   \t,\tjj={}\r\n\t   ;\r\n\t};   \r\n\r\n   vs=Class.Pull(o);\r\n   rv=Class.Obj(jj, function(op,onld){\r\n      return ((this instanceof rv)?\r\n            O.Class.InitClass(is, arguments)\r\n         :  rv.Create.Call(arguments)\r\n      );\r\n   }.Sys().Extend({\r\n   \t\t$$members: {}\r\n   }), 2);\r\n   $mmb=rv.$$members;\r\n\r\n\tif(2) {//-Extends\r\n\t\tz4=Class.MakeExtends(rv, $e, rv, rv, 0, 2);\r\n\t\trv.$$exInst=z4.arr;\r\n\t\tExtFn=z4.Fn;\r\n\t};\r\n\r\n   dd=SetupVars({}, vs.PRIVATE, {}, rv);\r\n   rv.$$state=SetupVars(rv, vs.PrivShare, vs.Shared, rv, dd, { Extended: ExtFn }, rv); //-Shared\r\n\r\n   is={\r\n         $$PRIVstate: dd\r\n      ,  $extends:$e\r\n      ,  $implements:$i\r\n      ,  $interface: $if\r\n      ,  $preImp:$pi\r\n      ,  $name:nm\r\n      ,  $type:'class'\r\n      ,  $op:$o\r\n      ,  $vs:vs\r\n      ,  $iid:O.$$iid++\r\n      ,  $class: rv\r\n   }\r\n   rv.Extend( [\r\n         is\r\n      ,  {\r\n\t\t\t\t\t$specs: o\r\n            ,  $Reg:function(nam) { O.Class.Reg(this, nam); return this; }.Sys()\r\n            ,  Create: function() {\r\n                  var RV;\r\n                  eval('RV=new rv('+O.ArgStr(arguments, 'arguments')+')');\r\n                  return RV;\r\n               }\r\n         }\r\n   ]);\r\n   is.$class=rv;\r\n\r\n   return rv;\r\n}","MEMBERS":{"InitClass":{"TYPE":"Function","CODE":"function (v, args){\r\n\t\t   cout(' ==== args='+JSON.SafeStr(args)+'\\n');\r\n         if(v.$InitState) return v.FUNCTION? v.FUNCTION.Call(args): undefined;\r\n\r\n         if(2) {//-vars\r\n\t         var nm,mb,s='',z,zz,z1,z2,z3,z4,f,ff,f2,l,ll,l2,ln,$fp,$fn,$v,k,x, FUN\r\n\t            ,\timps\r\n\t            ,\tExtFn, ImpFn\r\n\t            ,  a=args\r\n\t            ,\ti=(a&&a.length&&a[0])? a[0] : {}\r\n\t            ,\ti=O.CreateOptions(i)\r\n\t            ,\tnoInit=i.$$noInit\r\n\r\n\t            ,  vs=v.$vs\r\n\t            ,  p=vs.Private||{}\r\n\t            ,  pb=Object.CopyTo({}, [\r\n\t                     vs.Public||{}\r\n\t                  , { $$SetOp: function(ops){ op=OP=ops; } }\r\n\t               ])\r\n\t            ,\tjj={ Fire: i.$$Fire, On: i.$$On, Once: i.$$Once, $On: i.$$$On, $Once: i.$$$Once }\r\n\t            ,  rv=Class.Obj(jj, (pb.FUNCTION)?\r\n\t                     function() { return FUN.Call(arguments); }.Sys()\r\n\t                  :  {}\r\n\t               )\r\n\t            ,  $e=v.$extends, $ei=rv.$eInst=[]\r\n\t            ,  $i=v.$implements, $ii=rv.$iInst=[]\r\n\t            ,  $pi=v.$preImp, $pii=rv.$piInst=[]\r\n\t            ,  $if=v.$interface\r\n\t         \t,\tthisClass=i.$$thisClass||v.$class\r\n\t         \t,\tbindTo=i.$$bindTo||rv\r\n\t         ;\r\n\t\t\t};\r\n         \r\n\t\t   cout(' ==== i='+JSON.SafeStr(i)+'\\n');\r\n\t\t   fs.writeFileSync('c:/dev/i.json', JSON.SafeStr(i), 'utf8');\r\n\r\n         \r\n         x=rv.$iid=O.$$iid++;\r\n\t\t\trv.$$sys=2;\r\n         rv.$inst=2;\r\n         rv.$InitState='start';\r\n\r\n\t\t\timps=Class.MakeExtends(rv, $pi, bindTo, thisClass);//-PreImp\r\n\t\t\tif(2) {//-Extends\r\n\t\t\t\tz4=Class.MakeExtends(rv, $e, bindTo, thisClass);\r\n\t\t\t\trv.$$exInst=z4.arr;\r\n\t\t\t\tExtFn=z4.Fn;\r\n\t\t\t};\r\n\t\t\tif(2) {//-Implements\r\n\t\t\t\tz4=Class.MakeExtends(rv, $i, bindTo, thisClass, imps);\r\n\t\t\t\trv.$$imInst=z4.arr;\r\n\t\t\t\tImpFn=z4.Fn;\r\n\t\t\t};\r\n\r\n         rv.$$state=SetupVars(rv, vs.Private, vs.Public, thisClass, v.$$PRIVstate, {\r\n         \t\tExtended: ExtFn\r\n         \t,\tImplemented: ImpFn\r\n\r\n   \t\t}, bindTo);\r\n         if(typeof rv.FUNCTION=='function') FUN=rv.FUNCTION;\r\n\r\n         if(z=rv.Init)\r\n            if(!z.$$bound) z=z.Bind(rv);\r\n         if(!noInit) {\r\n               if(z) z.Call(a);\r\n               rv.Fire(['load','ready']);\r\n         };\r\n\r\n         return rv;\r\n      }","MEMBERS":{}},"Obj":{"TYPE":"Function","CODE":"function (op, v, shared) {\r\n\t\t\tvar Fire=O.Event.Fire;\r\n\r\n         if(!v) { v=op; op={} };\r\n         v.On=op.On||function(evt, fn, bnd){ return On(v, evt, fn, 0, 0, bnd); }.Sys();\r\n         v.Once=op.Once||function(evt, fn, bnd){ return On(v, evt, fn, 0, 2, bnd); }.Sys();\r\n         v.$On=op.$On||function(evt, fn, bnd) { return On(v, evt, fn, 2, 0, bnd); }.Sys();\r\n         v.$Once=op.$Once||function(evt, fn, bnd){ return On(v, evt, fn, 2, 2, bnd); }.Sys();\r\n         v.Fire=op.Fire||function(e, args, onDone) { Fire(v, e, args, onDone); }.Sys();\r\n\r\n\t\t\tif(!shared) {\r\n\t         v.$inst=true;\r\n\t         v.SetOptions=op.SetOptions||function(op,op2){return O.Class.SetOptions(v,op,op2);}.Sys();\r\n\t         if(typeof v!='function') {\r\n\t            var f=Function;\r\n\t            v.Extend=f.Extend;\r\n\t            v.ExtImp=f.ExtImp;\r\n\t            v.Implement=f.Implement;\r\n\t         };\r\n\t\t\t};\r\n\r\n         return v;\r\n      }","MEMBERS":{}},"Pull":{"TYPE":"Function","CODE":"function (v,pull,is){\r\n         var nm,z,tk=[],l,ln,zz\r\n            ,  p=v.Private, ps=v.PrivShare, pb=v.Public, s=v.Shared\r\n            ,  p2=v.PRIVATE\r\n            ,  $p=Array.Clone(Array.From(p?p.EXPAND:[]))\r\n            ,  $ps=Array.Clone(Array.From(ps?ps.EXPAND:[]))\r\n            ,  $pb=Array.Clone(Array.From(pb?pb.EXPAND:[]))\r\n            ,  $s=Array.Clone(Array.From(s?s.EXPAND:[]))\r\n            ,  $p2=p2? Array.Clone(Array.From(p2.EXPAND)) : []\r\n         ;\r\n         if(p)delete v.Private; else p={};\r\n         if(p2)delete v.PRIVATE;\r\n         if(ps)delete v.PrivShare; else ps={};\r\n         if(pb)delete v.Public; else pb={};\r\n         if(s)delete v.Shared; else s={};\r\n      \r\n         if(z=s.Private) {\r\n            if(z.EXPAND) {\r\n               Array.Merge($ps, Array.From(z.EXPAND));\r\n               delete z.EXPAND;\r\n            };\r\n            Object.CopyTo(ps, z);\r\n            delete s.Private;\r\n         };\r\n         if(z=pb.Shared){\r\n            if(z.EXPAND) {\r\n               Array.Merge($s, Array.From(z.EXPAND));\r\n               delete z.EXPAND;\r\n            };\r\n            s=Object.CopyTo({}, [z, s]);\r\n            delete pb.Shared;\r\n         };\r\n         if(z=p.Shared){\r\n            if(z.EXPAND) {\r\n               Array.Merge($ps, Array.From(z.EXPAND));\r\n               delete z.EXPAND;\r\n            };\r\n            ps=Object.CopyTo({}, [z, ps]);\r\n            delete p.Shared;\r\n         };\r\n\r\n         for(nm in v){\r\n            z=v[nm];zz=2;\r\n            if(!z.$$prim){\r\n               if(z.$shared)\r\n                  if(z.$private)ps[nm]=z; else s[nm]=z;\r\n               else if(z.$private)p[nm]=z;\r\n               else{pb[nm]=z;zz=0;};\r\n               \r\n               if(zz)delete v[nm];\r\n            };\r\n         };\r\n\r\n         return {\r\n               Private: p, Public: pb, PrivShare: ps, Shared: s, PRIVATE: p2\r\n            ,  EXPAND: {\r\n                     Private: $p,  PrivShare: $ps\r\n                  ,  Public: $pb,  Shared: $ps, PRIVATE: $p2\r\n               }\r\n         };\r\n\r\n      }","MEMBERS":{}},"$$RunFn":{"TYPE":"Function","CODE":"function (v,nam,args,notRecursive,noBase){\r\n         var rv=null,v=v?v:{},a=args,pi,xt=v.$$exInst,zz=v[nam];\r\n         if(zz&&!noBase)eval(\"rv=zz.Bind(pi)(\"+$ArgsStr(a,'a')+\");\");\r\n         else if(xt&&!notRecursive)rv=O.Class.$$RunFn(xt,nam,a,0,0);\r\n         return rv;\r\n      }","MEMBERS":{}},"MakeExtends":{"TYPE":"Function","CODE":"function (v, $e, bindTo, thisClass, existingRv, shared) {\r\n\t\t\tvar z, z2, zz, k, ff, i, i2, l, ll, ln, ln2, nm\r\n\t\t\t\t,\trv=existingRv||{ arr: [], }\r\n\t\t\t\t,\tarr=rv.arr\r\n\t\t\t\t,\tarr2\r\n\t\t\t\t,\tfn=rv.Fn=(rv.Fn || function(i) { return arr[(i&&i==0)? i : 0] })\r\n\t\t\t;\r\n\r\n         if(ll=$e.length){\r\n            for(l=0; l<ll; l++) {\r\n               k=$e[l];\r\n               \r\n               cout('\\n************ shared='+((shared)? 'yes' : 'no')+' ************\\n');\r\n               \r\n               zz=arr[l]=(shared)? k : new k({\r\n               \t\t$$noInit: 4\r\n               \t,\t$$bindTo: bindTo\r\n               \t,\t$$thisClass: thisClass\r\n               \t,\t$$Fire: v.Fire\r\n               \t,\t$$On: v.On\r\n               \t,\t$$Once: v.Once\r\n               \t,\t$$$On: v.$On\r\n               \t,\t$$$Once: v.$Once\r\n            \t});\r\n               for(nm in zz){\r\n                  z=zz[nm];\r\n                  \r\n                  if((z) && !z.$$prim) {\r\n                  \tif(typeof z=='function' && (!z.$$bound || z.$$cBound))\r\n                  \t\tz=z.Bind(bindTo||z, { cBound: 2 });\r\n                  \tv[nm]=z;\r\n               \t};\r\n               };\r\n            };\r\n         };\r\n\r\n\t\t\t\r\n\r\n\t\t\treturn rv;\r\n\t\t}","MEMBERS":{}},"SetOptions":{"TYPE":"Function","CODE":"function (v,op,op2){\r\n         if(!op2&&(v.$op||v.options)) {op2=op;op=v.$op?v.$op:v.options;};\r\n\r\n         //v.op=v.options=Object.Merge(op,op2);\r\n         v.op=v.options=$CreateOptions(op,op2);\r\n         var m, n, o=v.op, e=o.On, E=o.$On;\r\n         if(v.$$SetOp) v.$$SetOp(o);\r\n         if(e) v.On(e,0,v);\r\n         if(E) v.$On(E,0,v);\r\n         return v;\r\n      }","MEMBERS":{}},"SetupVars":{"TYPE":"Function","CODE":"function (obj, priv, pub, thisClass, forkState, vars, bindTo) {\r\n         var z, z2, z4, zz, k, k2, k4, kk, op, stt, s2, ya\r\n            ,  vd, nm, jj, $fp, $fn, mb, gt, st, os={}\r\n            ,  tc=thisClass\r\n            ,  xt=(tc!==obj)?\r\n                     {\r\n                           T: bindTo||obj\r\n                        ,  op: 0, OP: 0\r\n                     }\r\n                  :  {}\r\n         \t,\tst={\r\n         \t\t\tParent: O.Parent\r\n         \t\t}\r\n         ;\r\n\t\t\top=obj.$$props=obj.$$props||{};\r\n         if(tc) obj.$class=tc;\r\n\r\n         zz=Object.CopyTo({}, priv); z1={ $eval: 2 };\r\n         for(nm in zz){\r\n            z=zz[nm];\r\n            if(typeof z=='function' && !z.$$sys && !z.$$bound) { z1[nm]=z; zz[nm]=null; }\r\n            else if(typeof z=='function' && !z.$$sys && z.$$cBound) { zz[nm]=z.Bind(bindTo||obj, { cBound: 2 }); };\r\n         };\r\n         //stt=O.SB.State([zz, { thisClass: tc }, xt, z1]);\r\n         stt=(forkState)? forkState.Fork() : O.SB.State();\r\n         stt.Add({ oobbjj: bindTo||obj });\r\n         stt.Add([zz, { thisClass: tc }, vars||{}, xt, z1]);\r\n\t\t\tfor(nm in z1) {\r\n\t\t\t\tz=z1[nm];\r\n\t\t\t\t//out('if(typeof '+nm+'!=\"undefined\")'+nm+'='+nm+'.Bind(oobbjj, { $$cBound: 2 });');\r\n\t\t\t\tstt.Eval('if(typeof '+nm+'!=\"undefined\")'+nm+'='+nm+'.Bind(oobbjj, { $$cBound: 2 });');\r\n\t\t\t};\r\n\r\n         zz=Object.CopyTo({}, pub); z1={};\r\n         k=obj.$$varDat=(obj.$$varDat||{});\r\n         kk=obj.$$members=(obj.$$members||{});\r\n         for(nm in zz) {\r\n            ya=2;\r\n            vd=k[nm]={};\r\n            z=z2=zz[nm];\r\n\r\n            if(typeof z=='function' && !z.$$sys && (!z.$$bound||z.$$cBound)) {\r\n               if(z.$isOverload) {\r\n                  vd.type='overload';\r\n                  k4=z.fns;\r\n                  for(mb in k4){\r\n                     jj=k4[mb];\r\n                     if(!jj.$$bound||jj.$$cBound){\r\n                        $fp=jj.$fParent; $fn=jj.$fName;\r\n                        if(!jj.$$sys&&!jj.$$bound) jj=stt.EvalFunction(jj);\r\n                        k4[mb]=jj=jj.Bind(bindTo||obj, {$$cBound: 2});\r\n                        jj.$fParent=$fp; jj.$fName=$fn;\r\n                     };\r\n                  };\r\n               }\r\n               else if(z.$isProp) {\r\n                  vd.type='property';\r\n                  k4=Object.Clone(z.$$v||{});\r\n                  s2=stt.Fork(k4.Private||{});\r\n                  gt=k4.Get; st=k4.Set;\r\n                  ya=0;\r\n\r\n                  if(gt && !gt.$$sys && (!gt.$$bound||gt.$$cBound)) {\r\n                  \tif(!gt.$$bound) gt=s2.EvalFunction(gt);\r\n                  \tgt=gt.Bind(bindTo||obj, {$$cBound: 2});\r\n               \t};\r\n                  if(st && !st.$$sys && (!st.$$bound||st.$$cBound)) {\r\n                  \tif(!st.$$bound) st=s2.EvalFunction(st);\r\n                  \tst=st.Bind(bindTo||obj, {$$cBound: 2});\r\n               \t};\r\n                  //if(st && !st.$$sys && !st.$$bound) st=s2.EvalFunction(st);\r\n                  \r\n                  os.get=gt;\r\n                  if(!k4.readonly && st) {\r\n                     os.set=st;\r\n                     os.writable=true;\r\n                  };\r\n                  \r\n                  op[nm]=os;\r\n                  Object.defineProperty(obj, nm, os);\r\n               }\r\n               else {\r\n            \t\tvd.type='function';\r\n            \t\tif(!z.$$bound) z2=stt.EvalFunction(z);\r\n            \t\t//out('7777777777777777777777777777777777777777777777777777');\r\n            \t\tz2=z2.Bind(bindTo||obj, {$$cBound: 2});\r\n         \t\t};\r\n            };\r\n            if(ya) {\r\n            \tya=obj[nm];\r\n            \tif(ya) z2.$$parent=ya;\r\n            \tz2.$$mom=obj;\r\n            \tobj[nm]=kk[nm]=k[nm]=z2;\r\n         \t};\r\n         };\r\n      \r\n         return stt;\r\n      }","MEMBERS":{}},"Reg":{"TYPE":"Function","CODE":"function (t,nam){\r\n         var n= (O.IsStr(t.$name))?t.$name:(nam)?nam:'', z;\r\n         z= ((O.IsStr(t.$name))?t.$name:(nam)?nam:'').Trim();\r\n         n= n.Trim();\r\n         if(n!='') O.Class.$$classes[n]= t;\r\n      }","MEMBERS":{}}}},"Interface":{"TYPE":"Function","CODE":"function (nam,specs) {\r\n   var n=nam, s=specs, l, nm, z, zz, k, a, it={}, unk='UNKNOWN'\r\n      ,  I=O.Interface\r\n      ,  rv={\r\n               $$type: 'interface'\r\n            ,  members: {}\r\n            ,  Chech: function(v) {}\r\n            ,  Refresh: function() { rv.members=Object.CopyTo({}, it); return rv; }\r\n         }\r\n      ,  pt=rv.prototype;\r\n   ;\r\n   if(typeof n!='string') s=n;n='';\r\n   for(nm in s){\r\n      zz=s[nm];\r\n      it[nm]=I.MakeItem(s[nm]);\r\n\r\n   };\r\n   \r\n   return rv.Refresh();\r\n   \r\n   \r\n   for(nm in s){\r\n      if(typeof zz=='string'){\r\n         zz=zz.split('|');\r\n         z=zz[0].LCase();\r\n         if(z=='function'){\r\n            a=(l>1)?zz[1]:'';\r\n            eval(\r\n                  'k=function('+a+'){'\r\n               +     'throw(\"Interface error: function-'+nm\r\n               +        ((a!='')?(' ('+a+')'):'')\r\n               +        ' must be overridden. Interface = '+((n!='')?n:unk)+'.'\r\n               +     '\")' \r\n               +  '};' \r\n            );\r\n         }\r\n         else if(z=='property'){\r\n            a=(l>1)?zz[1]:'';\r\n            eval(\r\n                  'k=O.Property({'\r\n               +        'Get:function(){throw(\"Interface error: property-get-'+nm\r\n               +           ((a!='')?(' ('+a+')'):'')\r\n               +           ' must be overridden. Interface = '+((n!='')?n:unk)+'.'\r\n               +        '\")}' \r\n               +     ',  Set:function(v){throw(\"Interface error: property-set-'+nm\r\n               +           ' (v) must be overridden. Interface = '+((n!='')?n:unk)+'.'\r\n               +        '\")}' \r\n               +  '});' \r\n            );\r\n         }\r\n         else k='error: Interface spec not set \"'+nm+'\"';\r\n         pt[nm]=k;\r\n      }\r\n      \r\n   }\r\n\r\n   return rv;\r\n}","MEMBERS":{"MakeItem":{"TYPE":"Function","CODE":"function (v, isIObj) {\r\n         var a=arguments, l=a.lenght, rv, i, l ,nm, z, k, to=typeof v, I=O.Interface;\r\n         \r\n         if(to=='string') {\r\n            v=v.split('||');\r\n            l=v.length;\r\n            if(l>1) {\r\n               rv=[];\r\n               for(i=0; i<l; i++)\r\n                  rv.Push(I.MakeItem(v[l]));\r\n            }\r\n            else {\r\n               v=v[0].split('|');\r\n               k=I.NamToTyp(v[0]);\r\n               rv={ type: k };\r\n            };\r\n         }\r\n         else if(v instanceof Array) {\r\n            rv=[];\r\n            for(i=0, l=v.length; i<l; i++) {\r\n               k=I.MakeItem(v[i]);\r\n               if(k instanceof Array) Array.Merge(rv, k);\r\n               else rv.Push(k);\r\n            };\r\n         }\r\n         else if(I.IsIObj(v)) { rv=v; v.type=I.NamToTyp(v.type); }\r\n         else { rv={ type: v }; };\r\n         \r\n         return rv;\r\n      }","MEMBERS":{}},"StrToObj":{"TYPE":"Function","CODE":"function (v) {\r\n         \r\n      }","MEMBERS":{}},"NamToTyp":{"TYPE":"Function","CODE":"function (v) {\r\n         var st=typeof v=='string', k=(st)? v.LCase() : v;\r\n         return( (st)?\r\n               (k=='array')? Array\r\n                  : (k=='date')? Date\r\n                     : (k=='class')? O.Class\r\n                        : (k=='function')? Function\r\n                           : (k=='interface')? O.Interface\r\n                              : (k=='number')? Number\r\n                                 : (k=='object')? Object\r\n                                    : (k=='overload')? O.OverLoad\r\n                                       : (k=='property')? O.Property\r\n                                          : (k=='string')? String\r\n                                             : O._(v)\r\n            :  v\r\n         );\r\n      }","MEMBERS":{}},"IsIObj":{"TYPE":"Function","CODE":"function (v) {\r\n         var nm, z;\r\n         for(nm in v) if(nm!='type' && nm!='args') return 0;\r\n         return 2;\r\n      }","MEMBERS":{}}}},"Event":{"TYPE":"Function","CODE":"function (nam, op) {}","MEMBERS":{"On":{"TYPE":"Function","CODE":"function (v, evt, fn, sys, once, bnd){\r\n         var z=sys?'sys':'std',zz,ev=v.$$evts,mb,z2,ar,g,d,l,ln;\r\n         if(!ev)ev=v.$$evts={};\r\n         \r\n         if(typeof evt=='string') { zz=evt; evt={}; evt[zz]=fn; };\r\n         for(mb in evt) {\r\n            z2=ev[mb]; if(!z2) z2=ev[mb]={};\r\n            ar=z2[z]; if(!ar) ar=z2[z]=[];\r\n            g=Array.From(evt[mb]);\r\n            ln=g.length;\r\n            for(l=0;l<ln;l++) {\r\n               d=g[l];\r\n               if(bnd && !d.$$bound) { zz=d; d=d.Bind(v); d.fn=zz };\r\n\t\t\t\t\tif(once) { d=d.Caller(); d.$once=2 };\r\n               ar.push(d);\r\n            };\r\n         };\r\n      }","MEMBERS":{}},"Fire":{"TYPE":"Function","CODE":"function (v, ee, args, onDone) {\r\n         var k, z, zz, z2, ar, ev, e, l, l2, ll, i, ii, fn, nam, std, sys\r\n         \t,\tevnts=[]\r\n         \t,\t$evts=v.$$evts||{}\r\n         \t,\tg=Array.From(ee)\r\n         \t,\tln=g.length\r\n      \t\r\n      \t;\r\n   \t\tv.$$evts=$evts\r\n   \t\targs=args||[];\r\n         \r\n         if(arguments.length<4 && typeof args=='function') {\r\n      \t\tonDone=args;\r\n      \t\targs=[];\r\n      \t};\r\n         \r\n\t\t\tfor(i=0; i<ln; i++) {\r\n\t\t\t\tnam=z=g[i];\r\n\t\t\t\tif(typeof z=='string') z={ name: z };\r\n\t\t\t\telse { z=Object.Clone(z); nam=z.name; };\r\n\t\t\t\r\n\t\t\t\tif(typeof nam!='string' || nam=='')\r\n\t\t\t\t\tthrow('event names must be strings, and cannot be blank.');\r\n\t\t\t\r\n\t\t\t\tevnts.Push(z);\r\n\t\t\t\tz.args=args;\r\n\t\t\t\r\n\t\t\t\tif(zz=$evts[nam]) {\r\n\t\t\t\t\tif(ar=zz.std) { k=z.std=Array.Clone(ar); k.index=0; };\r\n\t\t\t\t\tif(ar=zz.sys) { k=z.sys=Array.Clone(ar); k.index=0; };\r\n\t\t\t\t};\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t};\r\n\r\n\t\t\tll=evnts.length;\r\n\t\t\tii=0;\r\n\t\t\t\r\n\t\t\tfn=function() {\r\n\t\t\t\tvar z, z2, zz, k, std, sys, FN;\r\n\t\t\t\t\r\n\t\t\t\tif(ii<ll) {\r\n\t\t\t\t\tz=evnts[ii];\r\n\t\t\t\t\tsys=z.sys; std=z.std;\r\n\r\n\t\t\t\t\tif(std && std.index<std.length) { FN=std[std.index]; std.index++; }\r\n\t\t\t\t\telse if(sys && sys.index<=sys.length) {\r\n\t\t\t\t\t\tFN=sys[sys.length-sys.index];\r\n\t\t\t\t\t\tsys.index++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse(ii++);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(FN) {\r\n\t\t\t\t\t\tk={\r\n\t\t\t\t\t\t\t\t$async: 0\r\n\t\t\t\t\t\t\t,\t$pass: 2\r\n\t\t\t\t\t\t\t,\t$passMsg: ''\r\n\t\t\t\t\t\t\t,\tsender: v\r\n\t\t\t\t\t\t\t,\tAsync: function() { this.$async=2; }\r\n\t\t\t\t\t\t\t,\tDone: function() { if(this.$async) fn.Call(arguments); }\r\n\t\t\t\t\t\t\t,\tFail: function(msg) { this.$passMsg=msg||''; this.$pass=0; }\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\teval('FN(k'+ArgStr(args, 'args', 2)+');');\r\n\t\t\t\t\t\tif(!k.$async) fn();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse fn();\r\n\t\t\t\t}\r\n\t\t\t\telse if(onDone) onDone();\r\n\t\t\t};\r\n\t\t\tfn();\r\n\r\n      }","MEMBERS":{}}}},"Val":{"TYPE":"Function","CODE":"function (val, ops){\r\n   var rv={\r\n         $$isVal: 2\r\n      ,  value: val\r\n      ,  options: Object.LCase(ops)\r\n   }\r\n}","MEMBERS":{}},"CreateOptions":{"TYPE":"Function","CODE":"function (ops, settings){\r\n\tvar i, k, l, lst=Array.Clone(arguments).Condense(), nm, rv={}, z, zz; \r\n\r\n\tfor(i=0, l=lst.length; i<l; i++) {\r\n\t\tz=lst[i];\r\n\t\tfor(nm in z) {\r\n\t\t\tk=z[nm];\r\n\t\t\tzz=rv[nm];\r\n\t\t\tif(!(typeof k=='object' && typeof zz=='object')) \r\n\t\t\t\trv[nm]=k;\r\n\t\t\telse rv[nm]=$CreateOptions(zz, k);\r\n\t\t};\r\n\t};\r\n\r\n\treturn rv;\r\n}","MEMBERS":{}},"$$iid":null}}}

 ==== i={"appVar":"app","core":{"global":2,"globalVar":2,"varName":"core"},"databases":{"OPTIONS":{"z":"","createGlobalVar":2,"globalVarName":0,"globalVarPrefix":"db_","createVar":2,"varName":0,"varPrefix":"db_","registerValue":2,"valueName":0,"valuePrefix":"db:"},"settings":{"name":"settings","host":"localhost","port":1002,"schemas":{"base":{"NAME":"settings:base"}}},"userData":{"name":"userData","host":"localhost","port":1002,"schemas":{"users":{"NAME":"userData:users"}}}},"modules":{"options":{"appRootVar":2,"global":0,"globalVar":0,"rootVar":2},"App":"app","router":"router"},"libs":{},"logging":{"options":{},"logs":{"main":{"console":2,"file":0,"db":0}},"main":"main","messages":{"first":"First app log.","outline":{"done":"","init":""},"app":{"done":"","exit":"","exiting":"","exitRequest":"","init":""}}},"vars":{},"values":{},"type":"httpServer","meta":{"title":"My App","version":"0.2","description":"This is my app."},"name":"myApp","fileSystems":{},"server":{"port":8088,"router":{"items":[{"mode":"get","path":"/","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /'); Next();\r\n                     }","MEMBERS":{}}},{"mode":"get","path":"/","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /  -  YES');\r\n                        res.writeHead(200, {\"Content-Type\": \"text/plain\"});\r\n                        res.end(\"root\\n\");\r\n                     }","MEMBERS":{}}},{"mode":"get","path":"/about","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /about');\r\n                        res.writeHead(200, {\"Content-Type\": \"text/plain\"});\r\n                        res.end(\"about\\n\");\r\n                     }","MEMBERS":{}}},{"mode":"get","regex":"/pam$","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /PAM +++++++++++++++++++++++++');\r\n                        res.writeHead(200, {\"Content-Type\": \"text/plain\"});\r\n                        res.end(\"/PAM +++++++++++++++++++++++++\");\r\n                     }","MEMBERS":{}}}]}},"pow":{"TYPE":"Function","CODE":"function (){/*eval(\"cout('#### app.name='+app.name);\")*/}","MEMBERS":{}}}


************ shared=no ************

 ==== args={"0":{"$$noInit":4}}

 ==== i={"$$noInit":4}

popsAppHttpServerApp - Init
  k.$$mom  

  z={"TYPE":"Function","CODE":"function () {\r\n\t\t\t\t\t\treturn t.apply(that, arguments);\r\n\t         \t}","MEMBERS":{"$$bound":2,"$$FN":{"TYPE":"Function","CODE":"function (ops, onRdy) {\r\n         cout('popsAppBaseApp - Init 1');\r\n\t\t   fs.writeFileSync('c:/dev/OOOO.json', JSON.SafeStr(this), 'utf8');\r\n         var t=this.SetOptions(ops),o=t.op,tp=o.type, z;\r\n\t\t   \r\n         //$pops.out('OOOO  =  '+z+'\\n');\r\n\r\n\t\t   z=JSON.SafeStr(t);\r\n         //$pops.out('this(app)  =  '+z+'\\n');\r\n\t\t   fs.writeFileSync('c:/dev/this-app.json', z, 'utf8');\r\n\r\n\t\t\tCreateDatabases(t);\r\n\t\t\t\r\n\r\n         cout('popsAppBaseApp - Init 2');\r\n\r\n      }","MEMBERS":{}}}}  

popsAppBaseApp - Init 1
CreateDatabases
o.databases={"OPTIONS":{"z":"","createGlobalVar":2,"globalVarName":0,"globalVarPrefix":"db_","createVar":2,"varName":0,"varPrefix":"db_","registerValue":2,"valueName":0,"valuePrefix":"db:"},"settings":{"name":"settings","host":"localhost","port":1002,"schemas":{"base":{"NAME":"settings:base"}}},"userData":{"name":"userData","host":"localhost","port":1002,"schemas":{"users":{"NAME":"userData:users"}}}}

CreateDatabases - nm=settings
 ==== args={"0":[{"name":"settings","host":"localhost","port":1002,"schemas":{"base":{"NAME":"settings:base"}}},{"autoConnect":0}]}

 ==== i={"name":"settings","host":"localhost","port":1002,"schemas":{"base":{"NAME":"settings:base"}},"autoConnect":0}

 ==== args={}

 ==== i={}

CreateDatabases - nm=userData
 ==== args={"0":[{"name":"userData","host":"localhost","port":1002,"schemas":{"users":{"NAME":"userData:users"}}},{"autoConnect":0}]}

 ==== i={"name":"userData","host":"localhost","port":1002,"schemas":{"users":{"NAME":"userData:users"}},"autoConnect":0}

 ==== args={}

 ==== i={}

popsAppBaseApp - Init 2
popsAppBaseApp - Init 1
CreateDatabases
o.databases={"OPTIONS":{"z":"","createGlobalVar":2,"globalVarName":0,"globalVarPrefix":"db_","createVar":2,"varName":0,"varPrefix":"db_","registerValue":2,"valueName":0,"valuePrefix":"db:"},"settings":{"name":"settings","host":"localhost","port":1002,"schemas":{"base":{"NAME":"settings:base"}}},"userData":{"name":"userData","host":"localhost","port":1002,"schemas":{"users":{"NAME":"userData:users"}}}}

CreateDatabases - nm=settings
 ==== args={"0":[{"name":"settings","host":"localhost","port":1002,"schemas":{"base":{"NAME":"settings:base"}}},{"autoConnect":0}]}

 ==== i={"name":"settings","host":"localhost","port":1002,"schemas":{"base":{"NAME":"settings:base"}},"autoConnect":0}

 ==== args={}

 ==== i={}

CreateDatabases - nm=userData
 ==== args={"0":[{"name":"userData","host":"localhost","port":1002,"schemas":{"users":{"NAME":"userData:users"}}},{"autoConnect":0}]}

 ==== i={"name":"userData","host":"localhost","port":1002,"schemas":{"users":{"NAME":"userData:users"}},"autoConnect":0}

 ==== args={}

 ==== i={}

popsAppBaseApp - Init 2
popsAppHttpServerApp - Init 2
           if(!this.op)              
ops=[{"appVar":"app","core":{"global":2,"globalVar":2,"varName":"core"},"databases":{"OPTIONS":{"z":"","createGlobalVar":2,"globalVarName":0,"globalVarPrefix":"db_","createVar":2,"varName":0,"varPrefix":"db_","registerValue":2,"valueName":0,"valuePrefix":"db:"},"settings":{"name":"settings","host":"localhost","port":1002,"schemas":{"base":{"NAME":"settings:base"}}},"userData":{"name":"userData","host":"localhost","port":1002,"schemas":{"users":{"NAME":"userData:users"}}}},"modules":{"options":{"appRootVar":2,"global":0,"globalVar":0,"rootVar":2},"App":"app","router":"router"},"libs":{},"logging":{"options":{},"logs":{"main":{"console":2,"file":0,"db":0}},"main":"main","messages":{"first":"First app log.","outline":{"done":"","init":""},"app":{"done":"","exit":"","exiting":"","exitRequest":"","init":""}}},"vars":{},"values":{},"type":"httpServer"},{"meta":{"title":"My App","version":"0.2","description":"This is my app."},"name":"myApp","type":"httpServer","fileSystems":{},"server":{"port":8088,"router":{"items":[{"mode":"get","path":"/","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /'); Next();\r\n                     }","MEMBERS":{}}},{"mode":"get","path":"/","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /  -  YES');\r\n                        res.writeHead(200, {\"Content-Type\": \"text/plain\"});\r\n                        res.end(\"root\\n\");\r\n                     }","MEMBERS":{}}},{"mode":"get","path":"/about","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /about');\r\n                        res.writeHead(200, {\"Content-Type\": \"text/plain\"});\r\n                        res.end(\"about\\n\");\r\n                     }","MEMBERS":{}}},{"mode":"get","regex":"/pam$","handler":{"TYPE":"Function","CODE":"function (req,res,Next){\r\n                        pops.cout('== /PAM +++++++++++++++++++++++++');\r\n                        res.writeHead(200, {\"Content-Type\": \"text/plain\"});\r\n                        res.end(\"/PAM +++++++++++++++++++++++++\");\r\n                     }","MEMBERS":{}}}]}},"pow":{"TYPE":"Function","CODE":"function (){/*eval(\"cout('#### app.name='+app.name);\")*/}","MEMBERS":{}}}]

